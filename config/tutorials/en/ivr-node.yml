title: Interactive Voice Response
description: Build an automated phone system for users to input information with the keypad and hear a spoken response with Node.js
products:
 - voice/voice-api
languages:
 - javascript

introduction: 
  title: Introduction to this tutorial
  description: This tutorial shows you how to  Build an automated phone system for users to input information with the keypad and hear a spoken response with Node.js.
  content: |
  # Interactive Voice Response

  For users with a simple enquiry, make it easy and quick for them by offering an Interactive Voice Response (IVR) service. This tutorial will walk you through building an application to do exactly that with simple text-to-speech (TTS) prompts and keypad input.
  
  The scenario is this: a customer phones a delivery company to find out the status of their order. They will be prompted to enter their order number and then hear a spoken response letting them know the (randomly generated by our example code) status of their order.
  
  This tutorial is based on the [Simple IVR](https://developer.nexmo.com/use-cases/interactive-voice-response) use case. All the code is available on [GitHub](https://github.com/spiritbro1/nodejs-phone-menu).

prerequisites:
- create-nexmo-account
- install-nodejs

tasks:
- sms-api/install-nexmo-nodejs
- sms-api/send-sms-from-repl
- sms-api/set-up-sms-flask
- sms-api/add-send-sms-view
- sms-api/run-flask-server
- sms-api/handle-form-post

conclusion:
  title: What's next?
  description: What else can you do with the Voice API?
  content: |

    # What's next?
    You can do a lot more with the Voice API.

    See [Voice API documentation](/voice/voice-api/overview).

    In the meantime for more information on our APIs including [inbound SMS](/messaging/sms/guides/inbound-sms), [Voice](/voice/overview), [2-Factor-Authentication](/verify/overview) and others.

    