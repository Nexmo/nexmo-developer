{"ast":null,"code":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar Format =\n/*#__PURE__*/\nfunction () {\n  function Format() {\n    var _this = this;\n\n    _classCallCheck(this, Format);\n\n    this.formatSelector = $('.js-format-selector')[0];\n\n    if (this.formatSelector) {\n      this.formatChanged(this.formatSelector.value, false);\n      $(this.formatSelector).change(function (event) {\n        return _this.formatChanged(event.target.value);\n      });\n      this.restoreFormat();\n    }\n  }\n\n  _createClass(Format, [{\n    key: \"formatChanged\",\n    value: function formatChanged(format) {\n      var persist = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      $('.js-format').hide();\n      $(\".js-format[data-format='\".concat(format, \"']\")).show();\n\n      if (persist) {\n        this.persistFormat(format);\n      }\n    }\n  }, {\n    key: \"persistFormat\",\n    value: function persistFormat(format) {\n      if (window.localStorage) {\n        window.localStorage.setItem('format', format);\n      }\n    }\n  }, {\n    key: \"restoreFormat\",\n    value: function restoreFormat() {\n      if (window.localStorage) {\n        var format = window.localStorage.getItem('format');\n\n        if (format) {\n          $(this.formatSelector).val(format);\n          this.formatChanged(format, false);\n        }\n      }\n    }\n  }]);\n\n  return Format;\n}();\n\nexport { Format as default };","map":{"version":3,"sources":["/Users/bgreenberg2/Documents/dev/nexmo-developer/lib/nexmo_developer/app/javascript/format/index.js"],"names":["Format","formatSelector","$","formatChanged","value","change","event","target","restoreFormat","format","persist","hide","show","persistFormat","window","localStorage","setItem","getItem","val"],"mappings":";;;;;;IAAqBA,M;;;AACnB,oBAAc;AAAA;;AAAA;;AACZ,SAAKC,cAAL,GAAsBC,CAAC,CAAC,qBAAD,CAAD,CAAyB,CAAzB,CAAtB;;AACA,QAAI,KAAKD,cAAT,EAAyB;AACvB,WAAKE,aAAL,CAAmB,KAAKF,cAAL,CAAoBG,KAAvC,EAA8C,KAA9C;AACAF,MAAAA,CAAC,CAAC,KAAKD,cAAN,CAAD,CAAuBI,MAAvB,CAA8B,UAACC,KAAD;AAAA,eAAW,KAAI,CAACH,aAAL,CAAmBG,KAAK,CAACC,MAAN,CAAaH,KAAhC,CAAX;AAAA,OAA9B;AAEA,WAAKI,aAAL;AACD;AACF;;;;kCAEaC,M,EAAwB;AAAA,UAAhBC,OAAgB,uEAAN,IAAM;AACpCR,MAAAA,CAAC,CAAC,YAAD,CAAD,CAAgBS,IAAhB;AACAT,MAAAA,CAAC,mCAA4BO,MAA5B,QAAD,CAAyCG,IAAzC;;AAEA,UAAIF,OAAJ,EAAa;AACX,aAAKG,aAAL,CAAmBJ,MAAnB;AACD;AACF;;;kCAEaA,M,EAAQ;AACpB,UAAIK,MAAM,CAACC,YAAX,EAAyB;AACvBD,QAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,QAA5B,EAAsCP,MAAtC;AACD;AACF;;;oCAEe;AACd,UAAIK,MAAM,CAACC,YAAX,EAAyB;AACvB,YAAMN,MAAM,GAAGK,MAAM,CAACC,YAAP,CAAoBE,OAApB,CAA4B,QAA5B,CAAf;;AACA,YAAIR,MAAJ,EAAY;AACVP,UAAAA,CAAC,CAAC,KAAKD,cAAN,CAAD,CAAuBiB,GAAvB,CAA2BT,MAA3B;AACA,eAAKN,aAAL,CAAmBM,MAAnB,EAA2B,KAA3B;AACD;AACF;AACF;;;;;;SAlCkBT,M","sourcesContent":["export default class Format {\n  constructor() {\n    this.formatSelector = $('.js-format-selector')[0]\n    if (this.formatSelector) {\n      this.formatChanged(this.formatSelector.value, false)\n      $(this.formatSelector).change((event) => this.formatChanged(event.target.value))\n\n      this.restoreFormat()\n    }\n  }\n\n  formatChanged(format, persist = true) {\n    $('.js-format').hide()\n    $(`.js-format[data-format='${format}']`).show()\n\n    if (persist) {\n      this.persistFormat(format)\n    }\n  }\n\n  persistFormat(format) {\n    if (window.localStorage) {\n      window.localStorage.setItem('format', format)\n    }\n  }\n\n  restoreFormat() {\n    if (window.localStorage) {\n      const format = window.localStorage.getItem('format')\n      if (format) {\n        $(this.formatSelector).val(format)\n        this.formatChanged(format, false)\n      }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}