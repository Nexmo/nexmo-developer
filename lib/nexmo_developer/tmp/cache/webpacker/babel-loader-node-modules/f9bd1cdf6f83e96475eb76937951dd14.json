{"ast":null,"code":"export default (function () {\n  var hasTriggeredCopyStat = {};\n  var hasTriggeredLinkStat = {}; // Track copy to clipboard usage\n\n  var clipboard = new Clipboard('.copy-button', {\n    text: function text(trigger) {\n      return $(trigger).next().text();\n    }\n  });\n  clipboard.on('success', function (e) {\n    var trigger = $(e.trigger);\n    var params = {\n      \"language\": trigger.attr(\"data-lang\"),\n      \"snippet\": trigger.attr(\"data-block\"),\n      \"section\": trigger.attr(\"data-section\"),\n      \"event\": \"copy\"\n    };\n    var key = params['language'] + params['section'] + params['snippet']; // We only want to track each copy once per page load\n\n    if (hasTriggeredCopyStat[key]) {\n      return true;\n    }\n\n    trigger.find('span').text('Copied');\n    fetch(createRequest(params)).then(function (response) {\n      if (response.ok) {\n        return response.json();\n      }\n\n      return Promise.reject({\n        message: 'Bad response from server',\n        response: response\n      });\n    }).then(function (payload) {\n      hasTriggeredCopyStat[key] = true;\n    }); // Can we point them to the dependencies too?\n\n    if (trigger.parent().hasClass(\"main-code\")) {\n      trigger.parent().parent().find(\".configure-dependencies\").prepend(\"<span class='label label--small'>Don't forget me!</span>\");\n    }\n  });\n  clipboard.on('error', function (e) {\n    console.error('Action:', e.action);\n    console.error('Trigger:', e.trigger);\n  }); // Track source link usage\n\n  $(document).on('mousedown', '.source-link', function (e) {\n    if (e.which === 3) {\n      return;\n    }\n\n    var trigger = $(this);\n    var section = trigger.attr(\"data-section\");\n    var params = {\n      \"language\": trigger.attr(\"data-lang\"),\n      \"snippet\": trigger.attr(\"data-block\"),\n      \"section\": section,\n      \"event\": \"source\"\n    };\n    var key = params['language'] + params['section'];\n\n    if (hasTriggeredLinkStat[key]) {\n      return true;\n    }\n\n    fetch(createRequest(params)).then(function (response) {\n      if (response.ok) {\n        return response.json();\n      }\n\n      return Promise.reject({\n        message: 'Bad response from server',\n        response: response\n      });\n    }).then(function (payload) {\n      hasTriggeredLinkStat[key] = true;\n    });\n  });\n});\n\nfunction createRequest(params) {\n  return new Request('/usage/code_snippet', {\n    method: 'POST',\n    credentials: 'same-origin',\n    body: JSON.stringify(params),\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n}","map":{"version":3,"sources":["/Users/bgreenberg2/Documents/dev/nexmo-developer/lib/nexmo_developer/app/javascript/code_snippet_events/index.js"],"names":["hasTriggeredCopyStat","hasTriggeredLinkStat","clipboard","Clipboard","text","trigger","$","next","on","e","params","attr","key","find","fetch","createRequest","then","response","ok","json","Promise","reject","message","payload","parent","hasClass","prepend","console","error","action","document","which","section","Request","method","credentials","body","JSON","stringify","headers"],"mappings":"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","sourcesContent":["export default () => {\n    let hasTriggeredCopyStat = {};\n    let hasTriggeredLinkStat = {};\n\n    // Track copy to clipboard usage\n    var clipboard = new Clipboard('.copy-button',{\n        text: function(trigger) {\n            return $(trigger).next().text();\n        }\n    });\n\n    clipboard.on('success', function(e) {\n        let trigger = $(e.trigger);\n\n        let params = {\n            \"language\": trigger.attr(\"data-lang\"),\n            \"snippet\": trigger.attr(\"data-block\"),\n            \"section\": trigger.attr(\"data-section\"),\n            \"event\": \"copy\"\n        };\n\n        let key = params['language'] + params['section'] + params['snippet'];\n\n        // We only want to track each copy once per page load\n        if (hasTriggeredCopyStat[key]) { return true; }\n\n        trigger.find('span').text('Copied');\n\n        fetch(createRequest(params))\n            .then((response) => {\n                if (response.ok) { return response.json() }\n                return Promise.reject({ message: 'Bad response from server', response })\n            })\n            .then((payload) => {\n                hasTriggeredCopyStat[key] = true;\n            })\n\n        // Can we point them to the dependencies too?\n        if (trigger.parent().hasClass(\"main-code\")) {\n            trigger.parent().parent().find(\".configure-dependencies\").prepend(\"<span class='label label--small'>Don't forget me!</span>\");\n        }\n\n    });\n\n\n    clipboard.on('error', function(e) {\n        console.error('Action:', e.action);\n        console.error('Trigger:', e.trigger);\n    });\n\n    // Track source link usage\n    $(document).on('mousedown', '.source-link', function(e){\n        if (e.which === 3) { return; }\n        let trigger = $(this);\n\n        let section = trigger.attr(\"data-section\");\n\n        let params = {\n            \"language\": trigger.attr(\"data-lang\"),\n            \"snippet\": trigger.attr(\"data-block\"),\n            \"section\": section,\n            \"event\": \"source\"\n        };\n\n        let key = params['language'] + params['section'];\n\n        if (hasTriggeredLinkStat[key]) { return true; }\n\n        fetch(createRequest(params))\n            .then((response) => {\n                if (response.ok) { return response.json() }\n                return Promise.reject({ message: 'Bad response from server', response })\n            })\n            .then((payload) => {\n                hasTriggeredLinkStat[key] = true;\n            })\n    });\n};\n\nfunction createRequest(params) {\n    return new Request('/usage/code_snippet', {\n        method: 'POST',\n        credentials: 'same-origin',\n        body: JSON.stringify(params),\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    });\n}\n"]},"metadata":{},"sourceType":"module"}