{"ast":null,"code":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport intersection from 'lodash/intersection';\n\nvar UserPreference =\n/*#__PURE__*/\nfunction () {\n  function UserPreference(useSingleStore) {\n    _classCallCheck(this, UserPreference);\n\n    this.useSingleStore = useSingleStore;\n    this.platformPreference = this.platforms();\n    this.terminalProgramsPreference = this.terminalPrograms();\n    this.frameworkPreference = this.frameworks();\n  }\n\n  _createClass(UserPreference, [{\n    key: \"languages\",\n    value: function languages() {\n      return this.get(this.getKeyFromType('languages'));\n    }\n  }, {\n    key: \"platforms\",\n    value: function platforms() {\n      return this.get(this.getKeyFromType('platforms'));\n    }\n  }, {\n    key: \"terminalPrograms\",\n    value: function terminalPrograms() {\n      return this.get(this.getKeyFromType('terminal_programs'));\n    }\n  }, {\n    key: \"frameworks\",\n    value: function frameworks() {\n      return this.get(this.getKeyFromType('frameworks'));\n    }\n  }, {\n    key: \"all\",\n    value: function all() {\n      return this.platforms().concat(this.terminalPrograms(), this.languages(), this.frameworks());\n    }\n  }, {\n    key: \"getKeyFromType\",\n    value: function getKeyFromType(type) {\n      if (this.useSingleStore) {\n        return 'preferences.all';\n      }\n\n      switch (type) {\n        case 'languages':\n          return 'preferences.languages';\n\n        case 'platforms':\n          return 'preferences.platforms';\n\n        case 'terminal_programs':\n          return 'preferences.terminal_programs';\n\n        case 'frameworks':\n          return 'preferences.frameworks';\n      }\n    }\n  }, {\n    key: \"getByType\",\n    value: function getByType(type) {\n      switch (type) {\n        case 'languages':\n          return this.languages();\n\n        case 'platforms':\n          return this.platforms();\n\n        case 'terminal_programs':\n          return this.terminalPrograms();\n\n        case 'frameworks':\n          return this.frameworks();\n      }\n    }\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      var value = window.localStorage.getItem(key);\n\n      if (!value) {\n        return [];\n      }\n\n      return JSON.parse(value);\n    }\n  }, {\n    key: \"store\",\n    value: function store(type, value) {\n      var key = this.getKeyFromType(type);\n      localStorage.setItem(key, JSON.stringify(value));\n    }\n  }, {\n    key: \"promote\",\n    value: function promote(type, value) {\n      var list = this.getByType(type) || [];\n      list = list.filter(function (item) {\n        return item !== value;\n      });\n      list.unshift(value);\n      this.store(type, list);\n    }\n  }, {\n    key: \"topMatch\",\n    value: function topMatch(available) {\n      var result = intersection(this.all(), available);\n      return result[0] || false;\n    }\n  }]);\n\n  return UserPreference;\n}();\n\nexport { UserPreference as default };","map":{"version":3,"sources":["/Users/bgreenberg2/Documents/dev/nexmo-developer/lib/nexmo_developer/app/javascript/volta_tabbed_examples/user_preference.js"],"names":["intersection","UserPreference","useSingleStore","platformPreference","platforms","terminalProgramsPreference","terminalPrograms","frameworkPreference","frameworks","get","getKeyFromType","concat","languages","type","key","value","window","localStorage","getItem","JSON","parse","setItem","stringify","list","getByType","filter","item","unshift","store","available","result","all"],"mappings":";;;;;;AAAA,OAAOA,YAAP,MAAyB,qBAAzB;;IAEqBC,c;;;AACnB,0BAAYC,cAAZ,EAA4B;AAAA;;AAC1B,SAAKA,cAAL,GAAsBA,cAAtB;AACA,SAAKC,kBAAL,GAA0B,KAAKC,SAAL,EAA1B;AACA,SAAKC,0BAAL,GAAkC,KAAKC,gBAAL,EAAlC;AACA,SAAKC,mBAAL,GAA2B,KAAKC,UAAL,EAA3B;AACD;;;;gCAEW;AACV,aAAO,KAAKC,GAAL,CAAS,KAAKC,cAAL,CAAoB,WAApB,CAAT,CAAP;AACD;;;gCAEW;AACV,aAAO,KAAKD,GAAL,CAAS,KAAKC,cAAL,CAAoB,WAApB,CAAT,CAAP;AACD;;;uCAEkB;AACjB,aAAO,KAAKD,GAAL,CAAS,KAAKC,cAAL,CAAoB,mBAApB,CAAT,CAAP;AACD;;;iCAEY;AACX,aAAO,KAAKD,GAAL,CAAS,KAAKC,cAAL,CAAoB,YAApB,CAAT,CAAP;AACD;;;0BAEK;AACJ,aAAO,KAAKN,SAAL,GAAiBO,MAAjB,CACL,KAAKL,gBAAL,EADK,EAEL,KAAKM,SAAL,EAFK,EAGL,KAAKJ,UAAL,EAHK,CAAP;AAKD;;;mCAEcK,I,EAAM;AACnB,UAAI,KAAKX,cAAT,EAAyB;AACrB,eAAO,iBAAP;AACH;;AACD,cAAQW,IAAR;AACE,aAAK,WAAL;AAAkB,iBAAO,uBAAP;;AAClB,aAAK,WAAL;AAAkB,iBAAO,uBAAP;;AAClB,aAAK,mBAAL;AAA0B,iBAAO,+BAAP;;AAC1B,aAAK,YAAL;AAAmB,iBAAO,wBAAP;AAJrB;AAMD;;;8BAESA,I,EAAM;AACd,cAAQA,IAAR;AACE,aAAK,WAAL;AAAkB,iBAAO,KAAKD,SAAL,EAAP;;AAClB,aAAK,WAAL;AAAkB,iBAAO,KAAKR,SAAL,EAAP;;AAClB,aAAK,mBAAL;AAA0B,iBAAO,KAAKE,gBAAL,EAAP;;AAC1B,aAAK,YAAL;AAAmB,iBAAO,KAAKE,UAAL,EAAP;AAJrB;AAMD;;;wBAEGM,G,EAAK;AACP,UAAMC,KAAK,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BJ,GAA5B,CAAd;;AACA,UAAI,CAACC,KAAL,EAAY;AAAE,eAAO,EAAP;AAAW;;AACzB,aAAOI,IAAI,CAACC,KAAL,CAAWL,KAAX,CAAP;AACD;;;0BAEKF,I,EAAME,K,EAAO;AACjB,UAAMD,GAAG,GAAG,KAAKJ,cAAL,CAAoBG,IAApB,CAAZ;AACAI,MAAAA,YAAY,CAACI,OAAb,CAAqBP,GAArB,EAA0BK,IAAI,CAACG,SAAL,CAAeP,KAAf,CAA1B;AACD;;;4BAEOF,I,EAAME,K,EAAO;AACnB,UAAIQ,IAAI,GAAG,KAAKC,SAAL,CAAeX,IAAf,KAAwB,EAAnC;AACAU,MAAAA,IAAI,GAAGA,IAAI,CAACE,MAAL,CAAY,UAAAC,IAAI;AAAA,eAAIA,IAAI,KAAKX,KAAb;AAAA,OAAhB,CAAP;AACAQ,MAAAA,IAAI,CAACI,OAAL,CAAaZ,KAAb;AACA,WAAKa,KAAL,CAAWf,IAAX,EAAiBU,IAAjB;AACD;;;6BAEQM,S,EAAW;AAClB,UAAMC,MAAM,GAAG9B,YAAY,CAAC,KAAK+B,GAAL,EAAD,EAAaF,SAAb,CAA3B;AACA,aAAOC,MAAM,CAAC,CAAD,CAAN,IAAa,KAApB;AACD;;;;;;SA1EkB7B,c","sourcesContent":["import intersection from 'lodash/intersection'\n\nexport default class UserPreference {\n  constructor(useSingleStore) {\n    this.useSingleStore = useSingleStore;\n    this.platformPreference = this.platforms()\n    this.terminalProgramsPreference = this.terminalPrograms()\n    this.frameworkPreference = this.frameworks()\n  }\n\n  languages() {\n    return this.get(this.getKeyFromType('languages'))\n  }\n\n  platforms() {\n    return this.get(this.getKeyFromType('platforms'))\n  }\n\n  terminalPrograms() {\n    return this.get(this.getKeyFromType('terminal_programs'))\n  }\n\n  frameworks() {\n    return this.get(this.getKeyFromType('frameworks'))\n  }\n\n  all() {\n    return this.platforms().concat(\n      this.terminalPrograms(),\n      this.languages(),\n      this.frameworks()\n    )\n  }\n\n  getKeyFromType(type) {\n    if (this.useSingleStore) {\n        return 'preferences.all';\n    }\n    switch (type) {\n      case 'languages': return 'preferences.languages'\n      case 'platforms': return 'preferences.platforms'\n      case 'terminal_programs': return 'preferences.terminal_programs'\n      case 'frameworks': return 'preferences.frameworks'\n    }\n  }\n\n  getByType(type) {\n    switch (type) {\n      case 'languages': return this.languages()\n      case 'platforms': return this.platforms()\n      case 'terminal_programs': return this.terminalPrograms()\n      case 'frameworks': return this.frameworks()\n    }\n  }\n\n  get(key) {\n    const value = window.localStorage.getItem(key)\n    if (!value) { return [] }\n    return JSON.parse(value)\n  }\n\n  store(type, value) {\n    const key = this.getKeyFromType(type)\n    localStorage.setItem(key, JSON.stringify(value))\n  }\n\n  promote(type, value) {\n    let list = this.getByType(type) || [];\n    list = list.filter(item => item !== value)\n    list.unshift(value)\n    this.store(type, list)\n  }\n\n  topMatch(available) {\n    const result = intersection(this.all(), available)\n    return result[0] || false\n  }\n}\n"]},"metadata":{},"sourceType":"module"}