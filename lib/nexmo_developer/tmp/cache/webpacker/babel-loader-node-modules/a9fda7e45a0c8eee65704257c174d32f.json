{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport algoliasearch from 'algoliasearch';\nimport debounce from 'lodash/debounce';\nimport NDPArticle from './NDPArticle.vue';\nimport ZendeskArticle from './ZendeskArticle.vue';\nexport default {\n  data: function data() {\n    return {\n      analyticsTriggered: false,\n      client: undefined,\n      expanded: false,\n      loading: false,\n      query: '',\n      results: [],\n      analyticsStrongIndicationOfReadingTimer: undefined\n    };\n  },\n  created: function created() {\n    this.client = algoliasearch(document.querySelector('meta[name=algolia_application_id]').getAttribute('content'), document.querySelector('meta[name=algolia_search_key]').getAttribute('content'));\n  },\n  mounted: function mounted() {\n    if (document.querySelector('.Nxd-template')) {\n      document.querySelector('.Nxd-template').addEventListener('click', this.onClickOutside.bind(this));\n    }\n  },\n  onDestroy: function onDestroy() {\n    if (document.querySelector('.Nxd-template')) {\n      document.querySelector('.Nxd-template').removeEventListener('click', this.onClickOutside.bind(this));\n    }\n  },\n  computed: {\n    showResults: function showResults() {\n      return this.query != '';\n    }\n  },\n  methods: {\n    resultTitle: function resultTitle(name) {\n      if (name == 'zendesk_nexmo_articles') {\n        return 'Knowledgebase';\n      } else if (name.includes('nexmo_developer')) {\n        return 'Nexmo Developer';\n      }\n    },\n    isZendeskArticle: function isZendeskArticle(result) {\n      return result.index == 'zendesk_nexmo_articles';\n    },\n    isNDPArticle: function isNDPArticle(result) {\n      return result.index.includes('nexmo_developer');\n    },\n    hitKey: function hitKey(result, hit) {\n      return result.index + hit.objectID;\n    },\n    onClickOutside: function onClickOutside(event) {\n      if (this.showResults) {\n        this.reset();\n      }\n\n      if (this.expanded) {\n        this.expanded = false;\n      }\n    },\n    onEscDownHandler: function onEscDownHandler(event) {\n      if (!this.analyticsTriggered && this.query !== '') {\n        this.triggerAnalyticalSearch();\n      }\n\n      this.reset();\n    },\n    reset: function reset() {\n      this.resetAnalyticsListeners();\n      this.query = '';\n      this.results = [];\n      this.loading = false;\n    },\n    onInputHandler: function onInputHandler(event) {\n      event.stopPropagation();\n\n      if (this.query === '') {\n        this.reset();\n      } else {\n        debounce(this.handleSearch.bind(this), 250)(event);\n      }\n    },\n    handleSearch: function handleSearch(event) {\n      this.loading = this.query === '';\n      this.analyticsTriggered = false;\n      this.performSearch();\n      this.resetAnalyticsListeners();\n      this.analyticsStrongIndicationOfReadingTimer = setTimeout(this.triggerAnalyticalSearch, 2000);\n      window.addEventListener('mousemove', this.triggerAnalyticalSearch);\n    },\n    performSearch: function performSearch() {\n      var _this = this;\n\n      var analytics = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var parameters = Array.from(document.querySelectorAll('meta[name=algolia_index]')).map(function (element) {\n        return {\n          indexName: element.getAttribute('content'),\n          query: _this.query,\n          params: {\n            analytics: analytics,\n            hitsPerPage: analytics ? 1 : 4\n          }\n        };\n      });\n      var searchPromise = this.client.search(parameters);\n\n      if (!analytics) {\n        searchPromise.then(function (response) {\n          _this.results = response['results'];\n          _this.loading = false;\n        });\n      }\n    },\n    resetAnalyticsListeners: function resetAnalyticsListeners() {\n      clearTimeout(this.analyticsStrongIndicationOfReadingTimer);\n      window.removeEventListener('mousemove', this.triggerAnalyticalSearch);\n    },\n    triggerAnalyticalSearch: function triggerAnalyticalSearch() {\n      this.performSearch(true);\n      this.analyticsTriggered = true;\n      this.resetAnalyticsListeners();\n    }\n  },\n  components: {\n    ZendeskArticle: ZendeskArticle,\n    NDPArticle: NDPArticle\n  }\n};","map":{"version":3,"sources":["Search.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div>\n      <div class=\"Vlt-composite\">\n        <div class=\"Vlt-composite__prepend Vlt-composite__prepend--icon\">\n          <svg><use xlink:href=\"/symbol/volta-icons.svg#Vlt-icon-search\"/></svg>\n        </div>\n        <div class=\"Vlt-input\">\n          <input\n            v-model=\"query\"\n            name=\"query\"\n            placeholder=\"Search\"\n            id=\"searchbox-test\"\n            type=\"text\"\n            autoComplete=\"off\"\n            v-on:keydown.esc=\"onEscDownHandler\"\n            v-on:input=\"onInputHandler\"\n            ></input>\n        </div>\n      </div>\n    </div>\n\n    <svg v-show=\"query\" class=\"Nxd-search__clear\"><use xlink:href=\"/symbol/volta-icons.svg#Vlt-icon-cross\"/></svg>\n\n    <div v-show=\"showResults\" class=\"Nxd-search\">\n      <div class=\"Nxd-search__wrapper\">\n        <div v-show=\"loading\" class=\"spinner\">\n          <i class=\"icon icon-cog\"></i>\n        </div>\n        <div v-show=\"!loading\" class=\"Nxd-search__wrapper\">\n          <div class=\"Nxd-search__results\" v-for=\"result in results\" v-bind:key=\"result.index\">\n            <h3 class=\"Nx-search__title\">\n              {{ resultTitle(result.index) }}\n            </h3>\n            <div v-if=\"result.hits.length > 0\" >\n              <div v-if=\"isZendeskArticle(result)\">\n                <ZendeskArticle v-for=\"hit in result.hits\" v-bind:hit=\"hit\" v-bind:key=\"hitKey(result, hit)\"/>\n              </div>\n              <div v-else-if=\"isNDPArticle(result)\">\n                <NDPArticle v-for=\"hit in result.hits\" v-bind:hit=\"hit\" v-bind:key=\"hitKey(result, hit)\"/>\n              </div>\n            </div>\n            <div v-else>\n              <p class=\"Nxd-search--no-results\"><i>No results</i></p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport algoliasearch from 'algoliasearch'\nimport debounce from 'lodash/debounce'\nimport NDPArticle from './NDPArticle.vue';\nimport ZendeskArticle from './ZendeskArticle.vue';\n\nexport default {\n  data: function() {\n    return {\n      analyticsTriggered: false,\n      client: undefined,\n      expanded: false,\n      loading: false,\n      query: '',\n      results: [],\n      analyticsStrongIndicationOfReadingTimer: undefined,\n    }\n  },\n  created: function() {\n    this.client = algoliasearch(\n      document.querySelector('meta[name=algolia_application_id]').getAttribute('content'),\n      document.querySelector('meta[name=algolia_search_key]').getAttribute('content')\n    );\n  },\n  mounted: function() {\n    if (document.querySelector('.Nxd-template')) {\n      document.querySelector('.Nxd-template').addEventListener('click', this.onClickOutside.bind(this));\n    }\n  },\n  onDestroy: function() {\n    if (document.querySelector('.Nxd-template')) {\n      document.querySelector('.Nxd-template').removeEventListener('click', this.onClickOutside.bind(this));\n    }\n  },\n  computed: {\n    showResults: function() {\n      return this.query != '';\n    }\n  },\n  methods: {\n    resultTitle: function(name) {\n      if (name == 'zendesk_nexmo_articles') {\n        return 'Knowledgebase';\n      } else if (name.includes('nexmo_developer')) {\n        return 'Nexmo Developer';\n      }\n    },\n    isZendeskArticle: function(result) {\n      return result.index == 'zendesk_nexmo_articles';\n    },\n    isNDPArticle: function(result) {\n      return result.index.includes('nexmo_developer');\n    },\n    hitKey: function(result, hit) {\n      return result.index + hit.objectID;\n    },\n    onClickOutside: function(event) {\n      if (this.showResults) {\n        this.reset();\n      }\n      if (this.expanded) {\n        this.expanded = false;\n      }\n    },\n    onEscDownHandler: function(event) {\n      if (!this.analyticsTriggered && this.query !== '') {\n        this.triggerAnalyticalSearch();\n      }\n      this.reset();\n    },\n    reset: function() {\n      this.resetAnalyticsListeners();\n      this.query = '';\n      this.results = [];\n      this.loading = false;\n    },\n    onInputHandler: function(event) {\n      event.stopPropagation();\n      if (this.query === '') {\n        this.reset();\n      } else {\n        debounce(this.handleSearch.bind(this), 250)(event);\n      }\n    },\n    handleSearch: function(event) {\n      this.loading = this.query === '';\n      this.analyticsTriggered = false;\n      this.performSearch();\n\n      this.resetAnalyticsListeners();\n      this.analyticsStrongIndicationOfReadingTimer = setTimeout(this.triggerAnalyticalSearch, 2000);\n      window.addEventListener('mousemove', this.triggerAnalyticalSearch);\n    },\n    performSearch: function(analytics = false) {\n      const parameters = Array.from(document.querySelectorAll('meta[name=algolia_index]')).map((element) => {\n        return {\n          indexName: element.getAttribute('content'),\n          query: this.query,\n          params: {\n            analytics: analytics,\n            hitsPerPage: analytics ? 1 : 4\n          }\n        }\n      })\n\n      const searchPromise = this.client.search(parameters)\n\n      if (!analytics) {\n        searchPromise.then((response) => {\n          this.results = response['results'];\n          this.loading = false;\n        })\n      }\n    },\n    resetAnalyticsListeners: function() {\n      clearTimeout(this.analyticsStrongIndicationOfReadingTimer);\n      window.removeEventListener('mousemove', this.triggerAnalyticalSearch);\n    },\n    triggerAnalyticalSearch: function() {\n      this.performSearch(true);\n      this.analyticsTriggered = true;\n      this.resetAnalyticsListeners();\n    }\n  },\n  components: {\n    ZendeskArticle, NDPArticle\n  }\n}\n</script>\n<style scoped>\n</style>\n"],"sourceRoot":"app/javascript/components/search"},"metadata":{},"sourceType":"module"}