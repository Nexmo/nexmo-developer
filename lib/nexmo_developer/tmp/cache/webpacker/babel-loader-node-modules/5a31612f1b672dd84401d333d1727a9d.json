{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport CharacterCounter from './character_counter';\nexport default {\n  data: function data() {\n    return {\n      body: 'It was the best of times, it was the worst of times, it was the age of wisdom, it was the age of foolishness, it was the epoch of belief, it was the epoch of incredulity, it was the season of Light, it was the season of Darkness, it was the spring of hope, it was the winter of despair, we had everything before us, we had nothing before us, we were all going direct to Heaven, we were all going direct the other way in short, the period was so far like the present period, that some of its noisiest authorities insisted on its being received, for good or for evil, in the superlative degree of comparison only.'\n    };\n  },\n  computed: {\n    smsInfo: function smsInfo() {\n      return new CharacterCounter(this.body).getInfo();\n    },\n    messages: function messages() {\n      return this.smsInfo.messages;\n    },\n    unicodeRequired: function unicodeRequired() {\n      return this.smsInfo.unicodeRequired;\n    },\n    smsComposition: function smsComposition() {\n      var count = this.smsInfo.charactersCount;\n      var characters = this.pluralize('character', count);\n      var messagesLength = this.messages.length;\n      var parts = this.pluralize('part', messagesLength);\n      return \"\".concat(count, \" \").concat(characters, \" sent in \").concat(messagesLength, \" message \").concat(parts);\n    }\n  },\n  methods: {\n    pluralize: function pluralize(singular, count) {\n      if (count === 1) {\n        return singular;\n      }\n\n      return \"\".concat(singular, \"s\");\n    }\n  }\n};","map":{"version":3,"sources":["Concatenation.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA,OAAA,gBAAA,MAAA,qBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,IAAA,EAAA;AADA,KAAA;AAGA,GALA;AAMA,EAAA,QAAA,EAAA;AACA,IAAA,OAAA,EAAA,mBAAA;AACA,aAAA,IAAA,gBAAA,CAAA,KAAA,IAAA,EAAA,OAAA,EAAA;AACA,KAHA;AAIA,IAAA,QAAA,EAAA,oBAAA;AACA,aAAA,KAAA,OAAA,CAAA,QAAA;AACA,KANA;AAOA,IAAA,eAAA,EAAA,2BAAA;AACA,aAAA,KAAA,OAAA,CAAA,eAAA;AACA,KATA;AAUA,IAAA,cAAA,EAAA,0BAAA;AACA,UAAA,KAAA,GAAA,KAAA,OAAA,CAAA,eAAA;AACA,UAAA,UAAA,GAAA,KAAA,SAAA,CAAA,WAAA,EAAA,KAAA,CAAA;AACA,UAAA,cAAA,GAAA,KAAA,QAAA,CAAA,MAAA;AACA,UAAA,KAAA,GAAA,KAAA,SAAA,CAAA,MAAA,EAAA,cAAA,CAAA;AAEA,uBAAA,KAAA,cAAA,UAAA,sBAAA,cAAA,sBAAA,KAAA;AACA;AAjBA,GANA;AAyBA,EAAA,OAAA,EAAA;AACA,IAAA,SAAA,EAAA,mBAAA,QAAA,EAAA,KAAA,EAAA;AACA,UAAA,KAAA,KAAA,CAAA,EAAA;AAAA,eAAA,QAAA;AAAA;;AACA,uBAAA,QAAA;AACA;AAJA;AAzBA,CAAA","sourcesContent":["<template>\n  <div class=\"Vlt-box\">\n    <h2>Try it out</h2>\n\n    <h4>Message</h4>\n    <div class=\"Vlt-textarea\">\n      <textarea v-model=\"body\" />\n    </div>\n\n    <div class=\"Vlt-margin--top2\" />\n\n    <h4>Data</h4>\n    <div class=\"Vlt-box Vlt-box--white Vlt-box--lesspadding\">\n      <div class=\"Vlt-grid\">\n        <div class=\"Vlt-col Vlt-col--1of3\">\n          <b>Unicode is Required?</b>\n          <i v-if=\"unicodeRequired\" class=\"icon icon--large icon-check-circle color--success\"></i>\n          <i v-else class=\"icon icon--large icon-times-circle color--error\"></i>\n        </div>\n        <div class=\"Vlt-col Vlt-col--2of3\">\n        </div>\n        <hr class=\"hr--shorter\"/>\n        <div class=\"Vlt-col Vlt-col--1of3\">\n          <b>Length</b>\n        </div>\n        <div class=\"Vlt-col Vlt-col--2of3\" v-html=\"smsComposition\" id=\"sms-composition\"></div>\n      </div>\n    </div>\n\n    <h4>Parts</h4>\n    <div class=\"Vlt-box Vlt-box--white Vlt-box--lesspadding\" id=\"parts\">\n      <div v-for= \"(message, index) in messages\" class=\"Vlt-grid\">\n        <div class=\"Vlt-col Vlt-col--1of3\"><b>Part {{index + 1}}</b></div>\n        <div class=\"Vlt-col Vlt-col--2of3\">\n          <code>\n            <span v-if=\"messages.length > 1\">\n              <span class=\"Vlt-badge Vlt-badge--blue\">User Defined Header</span>\n              <span>&nbsp;</span>\n            </span>\n            {{message}}\n          </code>\n        </div>\n        <hr v-if=\"index + 1 !== messages.length\" class=\"hr--shorter\"/>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport CharacterCounter from './character_counter';\n\nexport default {\n  data: function () {\n    return {\n      body: 'It was the best of times, it was the worst of times, it was the age of wisdom, it was the age of foolishness, it was the epoch of belief, it was the epoch of incredulity, it was the season of Light, it was the season of Darkness, it was the spring of hope, it was the winter of despair, we had everything before us, we had nothing before us, we were all going direct to Heaven, we were all going direct the other way in short, the period was so far like the present period, that some of its noisiest authorities insisted on its being received, for good or for evil, in the superlative degree of comparison only.'\n    };\n  },\n  computed: {\n    smsInfo: function() {\n      return new CharacterCounter(this.body).getInfo();\n    },\n    messages: function() {\n      return this.smsInfo.messages;\n    },\n    unicodeRequired: function() {\n      return this.smsInfo.unicodeRequired;\n    },\n    smsComposition: function() {\n      let count = this.smsInfo.charactersCount;\n      let characters = this.pluralize('character', count);\n      let messagesLength = this.messages.length;\n      let parts = this.pluralize('part', messagesLength);\n\n      return `${count} ${characters} sent in ${messagesLength} message ${parts}`;\n    }\n  },\n  methods: {\n    pluralize: function(singular, count) {\n      if (count === 1) { return singular; }\n      return `${singular}s`;\n    }\n  }\n}\n</script>\n\n<style scoped>\n  textarea {\n    width: 100%;\n    height: 150px;\n    resize: vertical;\n  }\n  code {\n    whiteSpace: normal;\n    wordBreak: break-all;\n }\n</style>\n"],"sourceRoot":"app/javascript/components/concatenation"},"metadata":{},"sourceType":"module"}